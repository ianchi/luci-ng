{
  "widget": "set-page",
  "events": {
    "onSetup": "$self.pageContext = $self, $self.page = $"
  },
  "content": [
    {
      "widget": "set-section",
      "options": { "title": "UBUS Service" },
      "content": [
        {
          "widget": "set-autocomplete",
          "bind": "page.service",
          "options": {
            "title": "Service",
            "description": "Ubus service",
            "enum=": "ubusList()",
            "required": true
          },
          "events": {
            "onValueChange": "page.ubusList = ubusList([page.service])[page.service] , page.method = undefined"
          }
        },
        {
          "widget": "set-autocomplete",
          "bind": "page.method",
          "options": {
            "title": "Method",
            "description": "Ubus method",
            "enum=": "Object.keys(page.ubusList || {})",
            "required": true
          },
          "events": {
            "onValueChange": "Object.keys(page.params || {}).forEach( key => delete page.params[key])"
          }
        }
      ]
    },
    {
      "widget": "set-section",
      "if": "page.params = RxObject({})",
      "events": { "onSetup": "$self.aux = $" },
      "options": { "title": "Parameters" },
      "content": [
        {
          "widget": "set-container",
          "for": "Object.keys(page.ubusList && page.ubusList[page.method] || {}).filter(m => m!='ubus_rpc_session')",
          "content": [
            {
              "widget": "set-input",
              "if": "['string', 'number', 'integer'].includes(page.ubusList[page.method][$for.data]) ",
              "bind": "page.params[$for.data]",
              "options": {
                "title=": "$for.data",
                "description=": "page.ubusList[page.method][$for.data]",
                "type=": "page.ubusList[page.method][$for.data]"
              },
              "events": {
                "onValueChange": "page.params[$for.data] !==''  || delete page.params[$for.data]"
              }
            },
            {
              "widget": "set-toggle",
              "if": "page.ubusList[page.method][$for.data] ==='boolean'",
              "bind": "page.params[$for.data]",
              "options": {
                "title=": "$for.data",
                "description=": "page.ubusList[page.method][$for.data]"
              }
            },
            {
              "widget": "set-input",
              "if": "['object', 'array'].includes(page.ubusList[page.method][$for.data]) ",
              "bind": "aux[$for.data]",
              "events": {
                "onValueChange": "page.params[$for.data] = $form.valid && eval($value?.trim(), {}) || undefined",
                "onValidate": [
                  "$value?.trim() && ",
                  "(typeof eval($value, {}) !== 'object' || page.ubusList[page.method][$for.data] === 'array' && !Array.isArray(eval($value, {}))) && ",
                  "`Must be a valid '${page.ubusList[page.method][$for.data]}'`"
                ]
              },
              "options": {
                "title=": "$for.data",
                "description=": "page.ubusList[page.method][$for.data]"
              }
            }
          ]
        }
      ]
    },
    {
      "widget": "set-section",
      "options": { "title": "Transforms" },
      "content": [
        {
          "widget": "set-input",
          "bind": "page.path",
          "options": {
            "title": "jsonPath filter",
            "description": "Transformation to apply to result"
          }
        },
        {
          "widget": "set-input",
          "bind": "page.errorVal",
          "options": {
            "title": "error values",
            "description": "Transformation to apply to error codes"
          },
          "events": {
            "onValidate": "$value?.trim() && typeof eval($value, {}) !== 'object' && `Must be a valid 'object'`"
          }
        },
        {
          "widget": "set-button",
          "options": {
            "title": "Ubus call",
            "buttonTitle": "Execute",
            "disabled=": "!pageContext.$form.valid",
            "spinner": "auto",
            "description=": [
              "!pageContext.$form.valid ? '' : ",
              "`ubus('${page.service}', '${page.method}' ${page.params ? ",
              "`, ${JSON.stringify(page.params)}` : page.errorVal ? ', undefined' : '' }${",
              "page.path  ? `, '${page.path}'` :  page.errorVal ? `, ${page.path}` : ''}${",
              "eval(page.errorVal,{}) ? `, ${JSON.stringify(eval(page.errorVal,{}))}` : ''})`"
            ]
          },
          "events": {
            "onClick": [
              "page.result = '' ,",
              "page.result = ubus(page.service, page.method, ",
              "  page.params || {}, ",
              "  page.path, { all: e=> (snackbar(e.message) && `Error: ${e.message}`), ...(page.errorVal && eval(page.errorVal, {}))} )"
            ]
          }
        }
      ]
    },
    {
      "widget": "set-section",
      "options": { "title": "Result" },
      "content": [
        {
          "widget": "code",
          "options": {
            "text=": "JSON.stringify(page.result, null, 4)"
          }
        }
      ]
    }
  ]
}
